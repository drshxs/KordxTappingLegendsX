--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 5) then
			v19 = _G[v7("\207\74\210\186\215", "\191\41\179\214\187\152\22")];
			v20 = _G[v7("\238\89\80\188\90\233", "\157\60\60\217\57")];
			v21 = _G[v7("\149\52\76\236\32\251", "\224\90\60\141\67\144")] or _G[v7("\158\126\77\227\141", "\234\31\47\143\232")][v7("\222\65\76\134\66\192", "\171\47\60\231\33")];
			v22 = _G[v7("\210\29\34\7\136\232\23\212", "\166\114\76\114\229\138\114")];
			v24 = 6;
		end
		if (v24 == 2) then
			v7 = function(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34)
				local v43 = 0;
				local v44;
				while true do
					if (v43 == 0) then
						v44 = {};
						for v59 = 1, #v25 do
							v6(v44, v0(v4(v1(v2(v25, v59, v59 + 1)), v1(v2(v26, 1 + ((v59 - 1) % #v26), 1 + ((v59 - 1) % #v26) + 1))) % 256));
						end
						v43 = 1;
					end
					if (v43 == 1) then
						return v5(v44);
					end
				end
			end;
			v8 = _G[v7("\245\190\182\238\236\179\189\233", "\129\209\216\155")];
			v9 = _G[v7("\181\78\64\24\22\161", "\198\58\50\113\120")][v7("\224\183\99\250", "\130\206\23\159\235\218\234\62")];
			v10 = _G[v7("\241\102\188\165\188\207", "\130\18\206\204\210\168")][v7("\200\50\136\207", "\171\90\233\189\212")];
			v24 = 3;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v3 = bit32 or bit;
			v24 = 1;
		end
		if (v24 == 4) then
			v15 = _G[v7("\193\161\138\231\25", "\181\192\232\139\124")][v7("\242\73\25\1\243\22", "\155\39\106\100\129\98")];
			v16 = _G[v7("\33\26\14\137", "\76\123\122\225")][v7("\216\143\220\57\196", "\180\235\185\65")];
			v17 = _G[v7("\50\1\109\4\57\248\170", "\85\100\25\98\92\150\220")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\111\170\39\119\195\104\174\39\123\196\112\170", "\28\207\83\26\166")];
			v24 = 5;
		end
		if (v24 == 3) then
			v11 = _G[v7("\195\59\173\227\4\65", "\176\79\223\138\106\38")][v7("\45\237\81", "\94\152\51\210\97")];
			v12 = _G[v7("\62\103\103\253\192\206", "\77\19\21\148\174\169")][v7("\170\177\238\169", "\205\194\155\203")];
			v13 = _G[v7("\37\28\84\66\246\49", "\86\104\38\43\152")][v7("\51\248\235", "\65\157\155\156\138\130\100")];
			v14 = _G[v7("\232\121\178\181\243", "\156\24\208\217\150\132")][v7("\171\239\113\42\193\5", "\200\128\31\73\160\113")];
			v24 = 4;
		end
		if (v24 == 1) then
			v4 = v3.bxor;
			v5 = table.concat;
			v6 = table.insert;
			v7 = nil;
			v24 = 2;
		end
		if (v24 == 6) then
			v23 = nil;
			v23 = function(v41, v42, ...)
				local v45 = 0;
				local v46;
				local v47;
				local v48;
				local v49;
				local v50;
				local v51;
				local v52;
				local v53;
				local v54;
				local v55;
				local v56;
				local v57;
				local v58;
				while true do
					if (v45 == 2) then
						v54 = nil;
						v55 = nil;
						v56 = nil;
						v57 = nil;
						v45 = 3;
					end
					if (v45 == 3) then
						v58 = nil;
						while true do
							local v60 = 0;
							while true do
								if (v60 == 3) then
									if (v46 == 6) then
										local v61 = 0;
										while true do
											if (v61 == 0) then
												v57 = nil;
												v57 = function(v69, v70, v71, v72, v73, v74)
													local v123 = 0;
													local v124;
													local v125;
													local v126;
													local v127;
													local v128;
													local v129;
													local v130;
													while true do
														if (2 == v123) then
															v128 = nil;
															v129 = nil;
															v123 = 3;
														end
														if (1 == v123) then
															v126 = nil;
															v127 = nil;
															v123 = 2;
														end
														if (3 == v123) then
															v130 = nil;
															while true do
																local v172 = 0;
																while true do
																	if (v172 == 0) then
																		if (v124 == 1) then
																			local v182 = 0;
																			while true do
																				if (v182 == 0) then
																					v128 = {v125,v126,nil,v127};
																					v129 = v52();
																					v182 = 1;
																				end
																				if (v182 == 1) then
																					v130 = {};
																					v124 = 2;
																					break;
																				end
																			end
																		end
																		if (v124 == 0) then
																			local v183 = 0;
																			while true do
																				if (v183 == 1) then
																					v127 = {};
																					v124 = 1;
																					break;
																				end
																				if (v183 == 0) then
																					v125 = {};
																					v126 = {};
																					v183 = 1;
																				end
																			end
																		end
																		v172 = 1;
																	end
																	if (v172 == 1) then
																		if (v124 == 3) then
																			local v184 = 0;
																			while true do
																				if (v184 == 1) then
																					return v128;
																				end
																				if (v184 == 0) then
																					for v205 = 2 - 1, v52() do
																						v126[v205 - (1494 - (214 + 1279))] = v57();
																					end
																					for v207 = 1866 - (1781 + 84), v52() do
																						v127[v207] = v52();
																					end
																					v184 = 1;
																				end
																			end
																		end
																		if (v124 == 2) then
																			local v185 = 0;
																			while true do
																				if (1 == v185) then
																					for v209 = 1, v52() do
																						local v210 = 0;
																						local v211;
																						local v212;
																						while true do
																							if (0 == v210) then
																								v211 = 0;
																								v212 = nil;
																								v210 = 1;
																							end
																							if (v210 == 1) then
																								while true do
																									if (0 == v211) then
																										v212 = v50();
																										if (v49(v212, 1 + 0, 338 - (186 + 151)) == 0) then
																											local v238 = 0;
																											local v239;
																											local v240;
																											local v241;
																											local v242;
																											while true do
																												if (v238 == 0) then
																													v239 = 0;
																													v240 = nil;
																													v238 = 1;
																												end
																												if (2 == v238) then
																													while true do
																														if (v239 == 2) then
																															local v261 = 0;
																															while true do
																																if (v261 == 1) then
																																	v239 = 3;
																																	break;
																																end
																																if (v261 == 0) then
																																	if (v49(v241, 944 - (41 + 24 + 878), 566 - ((769 - 445) + 241)) == ((449 - (197 + 250)) - 1)) then
																																		v242[7 - 5] = v130[v242[2]];
																																	end
																																	if (v49(v241, 1 + 1, 2) == (1 + 0)) then
																																		v242[2 + 1] = v130[v242[3]];
																																	end
																																	v261 = 1;
																																end
																															end
																														end
																														if (v239 == 0) then
																															local v262 = 0;
																															while true do
																																if (v262 == 0) then
																																	v240 = v49(v212, 5 - 3, (228 - (200 + 25)) + 0);
																																	v241 = v49(v212, 4, 6 + (1074 - (448 + 626)));
																																	v262 = 1;
																																end
																																if (v262 == 1) then
																																	v239 = 1;
																																	break;
																																end
																															end
																														end
																														if (v239 == 1) then
																															local v263 = 0;
																															while true do
																																if (v263 == 1) then
																																	v239 = 2;
																																	break;
																																end
																																if (v263 == 0) then
																																	v242 = {v51(),v51(),nil,nil};
																																	if (v240 == 0) then
																																		local v278 = 0;
																																		local v279;
																																		while true do
																																			if (v278 == 0) then
																																				v279 = 0;
																																				while true do
																																					if (v279 == 0) then
																																						v242[3] = v51();
																																						v242[(109 + 1287) - (762 + 630)] = v51();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v240 == ((1 + 1) - 1)) then
																																		v242[3] = v52();
																																	elseif (v240 == 2) then
																																		v242[3] = v52() - ((2 - 0) ^ ((1735 - (388 + 1295)) - (844 - (543 + 265))));
																																	elseif (v240 == 3) then
																																		local v287 = 0;
																																		local v288;
																																		while true do
																																			if (v287 == 0) then
																																				v288 = 0;
																																				while true do
																																					if (v288 == 0) then
																																						v242[3] = v52() - ((389 - ((1450 - (1126 + 216)) + 104 + 175)) ^ (1650 - (977 + 657)));
																																						v242[4 + 0] = v51();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v263 = 1;
																																end
																															end
																														end
																														if (v239 == 3) then
																															if (v49(v241, 7 - 4, 3 + 0) == 1) then
																																v242[(1 + 8) - (13 - 8)] = v130[v242[4]];
																															end
																															v125[v209] = v242;
																															break;
																														end
																													end
																													break;
																												end
																												if (v238 == 1) then
																													v241 = nil;
																													v242 = nil;
																													v238 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v124 = 3;
																					break;
																				end
																				if (v185 == 0) then
																					for v213 = (302 + 32) - (80 + 253), v129 do
																						local v214 = 0;
																						local v215;
																						local v216;
																						local v217;
																						while true do
																							if (v214 == 0) then
																								v215 = 0;
																								v216 = nil;
																								v214 = 1;
																							end
																							if (v214 == 1) then
																								v217 = nil;
																								while true do
																									if (v215 == 1) then
																										if (v216 == (3 - 2)) then
																											v217 = v50() ~= (452 - (125 + 327));
																										elseif (v216 == 2) then
																											v217 = v53();
																										elseif (v216 == (2 + 1)) then
																											v217 = v54();
																										end
																										v130[v213] = v217;
																										break;
																									end
																									if (v215 == 0) then
																										local v233 = 0;
																										while true do
																											if (v233 == 0) then
																												v216 = v50();
																												v217 = nil;
																												v233 = 1;
																											end
																											if (1 == v233) then
																												v215 = 1;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					v128[3] = v50();
																					v185 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v123 == 0) then
															v124 = 0;
															v125 = nil;
															v123 = 1;
														end
													end
												end;
												v61 = 1;
											end
											if (v61 == 1) then
												v58 = nil;
												v46 = 7;
												break;
											end
										end
									end
									if (v46 == 1) then
										local v62 = 0;
										while true do
											if (v62 == 0) then
												v49 = nil;
												v49 = function(v75, v76, v77, v78, v79, v80, v81, v82, v83, v84)
													if v77 then
														local v161 = 0;
														local v162;
														local v163;
														while true do
															if (1 == v161) then
																while true do
																	if (v162 == (0 - 0)) then
																		local v179 = 0;
																		while true do
																			if (v179 == 0) then
																				v163 = (v75 / (((6 + 0 + 0) - (1802 - (1563 + 235))) ^ (v76 - (344 - (106 + 237))))) % ((854 - (75 + 777)) ^ (((v77 - 1) - (v76 - (1 + 0))) + (1474 - (((2796 - (887 + 779)) - (190 + 171)) + (2069 - (5 + 1360))))));
																				return v163 - (v163 % (1 + 0));
																			end
																		end
																	end
																end
																break;
															end
															if (v161 == 0) then
																v162 = 0;
																v163 = nil;
																v161 = 1;
															end
														end
													else
														local v164 = 0;
														local v165;
														local v166;
														while true do
															if (1 == v164) then
																while true do
																	if (v165 == 0) then
																		local v180 = 0;
																		while true do
																			if (v180 == 0) then
																				v166 = 2 ^ (v76 - ((4 - 3) + 0));
																				return (((v75 % (v166 + v166)) >= v166) and (1 + (0 - 0))) or ((0 - 0) + 0 + 0);
																			end
																		end
																	end
																end
																break;
															end
															if (v164 == 0) then
																v165 = 0 + 0;
																v166 = nil;
																v164 = 1;
															end
														end
													end
												end;
												v62 = 1;
											end
											if (v62 == 1) then
												v50 = nil;
												v46 = 2;
												break;
											end
										end
									end
									break;
								end
								if (v60 == 1) then
									if (v46 == 5) then
										local v63 = 0;
										while true do
											if (v63 == 1) then
												v56 = function(...)
													return {...}, v20("#", ...);
												end;
												v46 = 6;
												break;
											end
											if (v63 == 0) then
												v55 = v52;
												v56 = nil;
												v63 = 1;
											end
										end
									end
									if (v46 == 2) then
										local v64 = 0;
										while true do
											if (v64 == 0) then
												v50 = function(v85, v86, v87, v88)
													local v131 = 0;
													local v132;
													local v133;
													while true do
														if (v131 == 0) then
															v132 = 0;
															v133 = nil;
															v131 = 1;
														end
														if (v131 == 1) then
															while true do
																local v173 = 0;
																while true do
																	if (v173 == 0) then
																		if (v132 == (1 + 0)) then
																			return v133;
																		end
																		if (v132 == 0) then
																			local v186 = 0;
																			while true do
																				if (v186 == 0) then
																					v133 = v9(v41, v47, v47);
																					v47 = v47 + ((3335 - ((3340 - (630 + 1344)) + 170)) - (781 + (1143 - ((747 - (653 + 10)) + (198 - 156)))));
																					v186 = 1;
																				end
																				if (v186 == 1) then
																					v132 = 1 + 0;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v51 = nil;
												v64 = 1;
											end
											if (v64 == 1) then
												v51 = function(v89, v90, v91, v92, v93, v94, v95)
													local v134 = 0;
													local v135;
													local v136;
													local v137;
													while true do
														if (v134 == 0) then
															v135 = 0;
															v136 = nil;
															v134 = 1;
														end
														if (v134 == 1) then
															v137 = nil;
															while true do
																local v174 = 0;
																while true do
																	if (0 == v174) then
																		if (v135 == 0) then
																			local v187 = 0;
																			while true do
																				if (v187 == 0) then
																					v136, v137 = v9(v41, v47, v47 + 2);
																					v47 = v47 + (1984 - ((1903 - ((2093 - (620 + 599)) + 110)) + 1063));
																					v187 = 1;
																				end
																				if (1 == v187) then
																					v135 = 1;
																					break;
																				end
																			end
																		end
																		if (v135 == 1) then
																			return (v137 * (34 + 151 + (213 - 142))) + v136;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v46 = 3;
												break;
											end
										end
									end
									v60 = 2;
								end
								if (v60 == 0) then
									if (3 == v46) then
										local v65 = 0;
										while true do
											if (0 == v65) then
												v52 = nil;
												v52 = function(v96, v97, v98, v99)
													local v138 = 0;
													local v139;
													local v140;
													local v141;
													local v142;
													local v143;
													while true do
														if (v138 == 0) then
															v139 = 0;
															v140 = nil;
															v138 = 1;
														end
														if (v138 == 1) then
															v141 = nil;
															v142 = nil;
															v138 = 2;
														end
														if (v138 == 2) then
															v143 = nil;
															while true do
																local v175 = 0;
																while true do
																	if (v175 == 0) then
																		if (v139 == 0) then
																			local v188 = 0;
																			while true do
																				if (v188 == 0) then
																					v140, v141, v142, v143 = v9(v41, v47, v47 + (9 - 6));
																					v47 = v47 + ((1821 - (55 + 1758)) - (13 - 9));
																					v188 = 1;
																				end
																				if (1 == v188) then
																					v139 = 1;
																					break;
																				end
																			end
																		end
																		if (v139 == 1) then
																			return (v143 * (4810765 + 11966451)) + (v142 * ((1535 + 65256) - ((2722 - (4716 - 2824)) + 425))) + (v141 * (361 - (28 + 77))) + v140;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v65 = 1;
											end
											if (1 == v65) then
												v53 = nil;
												v46 = 4;
												break;
											end
										end
									end
									if (v46 == 0) then
										local v66 = 0;
										while true do
											if (v66 == 0) then
												v47 = 2 - 1;
												v48 = nil;
												v66 = 1;
											end
											if (v66 == 1) then
												v41 = v12(v11(v41, 18 - 13), v7("\0\74", "\46\100\156\208\100\64\20\172"), function(v100)
													if (v9(v100, 1190 - (89 + 1099)) == 79) then
														local v167 = 0;
														local v168;
														while true do
															if (0 == v167) then
																v168 = 0;
																while true do
																	if (v168 == 0) then
																		local v181 = 0;
																		while true do
																			if (v181 == 0) then
																				v48 = v8(v11(v100, 1, 1));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v169 = 0;
														local v170;
														local v171;
														while true do
															if (v169 == 0) then
																v170 = 0;
																v171 = nil;
																v169 = 1;
															end
															if (v169 == 1) then
																while true do
																	if (v170 == 0) then
																		v171 = v10(v8(v100, 29 - (1298 - (431 + 854))));
																		if v48 then
																			local v198 = 0;
																			local v199;
																			local v200;
																			while true do
																				if (v198 == 1) then
																					while true do
																						local v227 = 0;
																						while true do
																							if (0 == v227) then
																								if (v199 == 1) then
																									return v200;
																								end
																								if (v199 == 0) then
																									local v234 = 0;
																									while true do
																										if (v234 == 1) then
																											v199 = 1;
																											break;
																										end
																										if (v234 == 0) then
																											v200 = v13(v171, v48);
																											v48 = nil;
																											v234 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (v198 == 0) then
																					v199 = 0;
																					v200 = nil;
																					v198 = 1;
																				end
																			end
																		else
																			return v171;
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
												end);
												v46 = 1;
												break;
											end
										end
									end
									v60 = 1;
								end
								if (v60 == 2) then
									if (v46 == 4) then
										local v67 = 0;
										while true do
											if (v67 == 0) then
												v53 = function(v101, v102, v103, v104)
													local v144 = 0;
													local v145;
													local v146;
													local v147;
													local v148;
													local v149;
													local v150;
													local v151;
													while true do
														if (v144 == 0) then
															v145 = 0;
															v146 = nil;
															v144 = 1;
														end
														if (v144 == 2) then
															v149 = nil;
															v150 = nil;
															v144 = 3;
														end
														if (v144 == 1) then
															v147 = nil;
															v148 = nil;
															v144 = 2;
														end
														if (3 == v144) then
															v151 = nil;
															while true do
																local v176 = 0;
																while true do
																	if (v176 == 0) then
																		if (v145 == (12 - 9)) then
																			local v189 = 0;
																			while true do
																				if (v189 == 0) then
																					if (v150 == (0 - 0)) then
																						if (v149 == ((824 - (49 + (2139 - 1364))) + 0)) then
																							return v151 * (0 + 0 + (291 - (199 + 92)) + 0);
																						else
																							local v230 = 0;
																							local v231;
																							while true do
																								if (0 == v230) then
																									v231 = 0 + 0;
																									while true do
																										if (v231 == (0 - 0)) then
																											v150 = (1607 - 707) - (603 + 12 + 284);
																											v148 = (893 - (507 + 386)) + 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v150 == (3734 - ((1492 - (59 + 12 + 35 + 196)) + (2212 - (1687 + 28))))) then
																						return ((v149 == (0 + (0 - (0 + 0)))) and (v151 * ((1 + 0 + (0 - 0)) / ((0 - 0) - 0)))) or (v151 * NaN);
																					end
																					return v16(v151, v150 - (113 + 105 + 805)) * (v148 + (v149 / ((924 - (355 + 567)) ^ (98 - 46))));
																				end
																			end
																		end
																		if (v145 == 0) then
																			local v190 = 0;
																			while true do
																				if (v190 == 1) then
																					v145 = 1;
																					break;
																				end
																				if (v190 == 0) then
																					v146 = v52();
																					v147 = v52();
																					v190 = 1;
																				end
																			end
																		end
																		v176 = 1;
																	end
																	if (v176 == 1) then
																		if (v145 == 2) then
																			local v191 = 0;
																			while true do
																				if (v191 == 0) then
																					v150 = v49(v147, 5 + 3 + 13, (711 - (509 + 72 + 121)) + ((217 - 159) - 36));
																					v151 = ((v49(v147, 1343 - (19 + (4295 - 3003))) == (1 + 0)) and -1) or (((598 - (529 + 68)) + 1) - 1);
																					v191 = 1;
																				end
																				if (v191 == 1) then
																					v145 = 7 - 4;
																					break;
																				end
																			end
																		end
																		if (v145 == 1) then
																			local v192 = 0;
																			while true do
																				if (0 == v192) then
																					v148 = 3 - 2;
																					v149 = (v49(v147, ((5 - 1) - 3) + 0, 69 - 49) * ((((4354 - 3444) + 124) - (43 + (2769 - (779 + 1089)) + 88)) ^ ((317 - (134 + 124)) - 27))) + v146;
																					v192 = 1;
																				end
																				if (v192 == 1) then
																					v145 = 2 - 0;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v54 = nil;
												v67 = 1;
											end
											if (1 == v67) then
												v54 = function(v105, v106, v107, v108, v109, v110, v111, v112)
													local v152 = 0;
													local v153;
													local v154;
													local v155;
													while true do
														if (1 == v152) then
															v155 = nil;
															while true do
																local v177 = 0;
																while true do
																	if (v177 == 1) then
																		if (v153 == 1) then
																			local v193 = 0;
																			while true do
																				if (1 == v193) then
																					v153 = 2;
																					break;
																				end
																				if (v193 == 0) then
																					v154 = v11(v41, v47, (v47 + v105) - (848 - ((2603 - (1274 + 546)) + 64)));
																					v47 = v47 + v105;
																					v193 = 1;
																				end
																			end
																		end
																		if (v153 == 2) then
																			local v194 = 0;
																			while true do
																				if (v194 == 1) then
																					v153 = 5 - 2;
																					break;
																				end
																				if (0 == v194) then
																					v155 = {};
																					for v218 = 1 + (101 - (67 + 34)), #v154 do
																						v155[v218] = v10(v9(v11(v154, v218, v218)));
																					end
																					v194 = 1;
																				end
																			end
																		end
																		break;
																	end
																	if (v177 == 0) then
																		if (v153 == 3) then
																			return v14(v155);
																		end
																		if (v153 == 0) then
																			local v195 = 0;
																			while true do
																				if (v195 == 1) then
																					v153 = 1;
																					break;
																				end
																				if (v195 == 0) then
																					v154 = nil;
																					if not v105 then
																						local v228 = 0;
																						local v229;
																						while true do
																							if (v228 == 0) then
																								v229 = 0 + 0;
																								while true do
																									if (v229 == 0) then
																										v105 = v52();
																										if (v105 == (((2103 - (951 + 521)) + 1364) - (((2331 + 659) - (50 + (2517 - (326 + 1225)))) + 21))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v195 = 1;
																				end
																			end
																		end
																		v177 = 1;
																	end
																end
															end
															break;
														end
														if (v152 == 0) then
															v153 = 0 - 0;
															v154 = nil;
															v152 = 1;
														end
													end
												end;
												v46 = 5;
												break;
											end
										end
									end
									if (v46 == 7) then
										local v68 = 0;
										while true do
											if (v68 == 0) then
												v58 = function(v113, v114, v115, v116, v117, v118, v119, v120, v121, v122)
													local v156 = 0;
													local v157;
													local v158;
													local v159;
													local v160;
													while true do
														if (v156 == 2) then
															while true do
																local v178 = 0;
																while true do
																	if (v178 == 0) then
																		if (1 == v157) then
																			local v196 = 0;
																			while true do
																				if (v196 == 0) then
																					v160 = v113[1815 - (1611 + 201)];
																					return function(...)
																						local v220 = 0;
																						local v221;
																						local v222;
																						local v223;
																						local v224;
																						local v225;
																						local v226;
																						while true do
																							if (v220 == 3) then
																								while true do
																									if (v221 == 3) then
																										_G['A'], _G['B'] = v56(v19(v226));
																										if not _G['A'][1 - 0] then
																											local v243 = 0;
																											local v244;
																											local v245;
																											while true do
																												if (0 == v243) then
																													v244 = 0;
																													v245 = nil;
																													v243 = 1;
																												end
																												if (v243 == 1) then
																													while true do
																														if (v244 == 0) then
																															v245 = v113[4][v222] or "?";
																															error(v7("\57\206\18\165\23\231\128\228\24\223\15\190\71\242\212\161\49", "\106\173\96\204\103\147\160\129") .. v245 .. v7("\220\241", "\129\203\73\69\122\159\234") .. _G['A'][2]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 2, _G['B']);
																										end
																										break;
																									end
																									if (0 == v221) then
																										local v235 = 0;
																										while true do
																											if (v235 == 1) then
																												v221 = 1;
																												break;
																											end
																											if (0 == v235) then
																												v222 = 1 + 0;
																												v223 = -((316 - (111 + 204)) + 0 + 0);
																												v235 = 1;
																											end
																										end
																									end
																									if (v221 == 2) then
																										local v236 = 0;
																										while true do
																											if (v236 == 1) then
																												v221 = 3;
																												break;
																											end
																											if (v236 == 0) then
																												v226 = nil;
																												v226 = function(v246, v247, v248, v249)
																													local v250 = 0;
																													local v251;
																													local v252;
																													local v253;
																													local v254;
																													local v255;
																													local v256;
																													local v257;
																													local v258;
																													local v259;
																													local v260;
																													while true do
																														if (v250 == 2) then
																															v258 = (v225 - v253) + (1547 - (1086 + 460));
																															v259 = nil;
																															v260 = nil;
																															while true do
																																local v265 = 0;
																																local v266;
																																while true do
																																	if (v265 == 0) then
																																		v266 = 0;
																																		while true do
																																			if (0 == v266) then
																																				local v280 = 0;
																																				while true do
																																					if (v280 == 1) then
																																						v266 = 1;
																																						break;
																																					end
																																					if (v280 == 0) then
																																						v259 = v251[v222];
																																						v260 = v259[1];
																																						v280 = 1;
																																					end
																																				end
																																			end
																																			if (1 == v266) then
																																				if (v260 <= (372 - (292 + 61))) then
																																					if (v260 <= ((3524 - 1918) - ((128 - (28 + 2)) + 1499))) then
																																						if (v260 <= 4) then
																																							if (v260 <= (1 - 0)) then
																																								if (v260 == (0 + 0)) then
																																									v257[v259[(117 - (17 + 99)) + (1 - 0)]] = v259[3];
																																								else
																																									v257[v259[2]] = v259[1 + 2] ~= (0 - 0);
																																								end
																																							elseif (v260 <= (5 - 3)) then
																																								v257[v259[2 - 0]] = #v257[v259[1745 - (137 + 1605)]];
																																							elseif (v260 == 3) then
																																								v257[v259[(1146 - (7 + 54)) - ((1557 - 504) + 30)]]();
																																							else
																																								local v341 = 0;
																																								local v342;
																																								local v343;
																																								while true do
																																									if (1 == v341) then
																																										while true do
																																											if (0 == v342) then
																																												v343 = v259[1 + 1];
																																												v257[v343](v257[v343 + 1 + 0]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (0 == v341) then
																																										v342 = 0;
																																										v343 = nil;
																																										v341 = 1;
																																									end
																																								end
																																							end
																																						elseif (v260 <= 6) then
																																							if (v260 == 5) then
																																								if (v257[v259[(1124 - (519 + 600)) - 3]] == v257[v259[4 + 0]]) then
																																									v222 = v222 + (1 - 0);
																																								else
																																									v222 = v259[3];
																																								end
																																							else
																																								for v339 = v259[2], v259[1631 - (993 + 635)] do
																																									v257[v339] = nil;
																																								end
																																							end
																																						elseif (v260 <= (1203 - (476 + (865 - (32 + 113))))) then
																																							local v293 = 0;
																																							local v294;
																																							local v295;
																																							local v296;
																																							while true do
																																								if (v293 == 0) then
																																									v294 = 0;
																																									v295 = nil;
																																									v293 = 1;
																																								end
																																								if (v293 == 1) then
																																									v296 = nil;
																																									while true do
																																										if (v294 == 0) then
																																											local v391 = 0;
																																											while true do
																																												if (v391 == 1) then
																																													v294 = 1;
																																													break;
																																												end
																																												if (v391 == 0) then
																																													v295 = v259[1 + 0 + (3 - 2)];
																																													v296 = v257[v295];
																																													v391 = 1;
																																												end
																																											end
																																										end
																																										if (v294 == 1) then
																																											for v406 = v295 + (1 - 0), v223 do
																																												v15(v296, v257[v406]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v260 > ((96 - 72) - 16)) then
																																							v257[v259[2 + 0 + 0 + 0]] = v257[v259[3]][v259[(1683 - (844 + 829)) - (17 - 11)]];
																																						else
																																							v257[v259[2]] = v257[v259[3]] % v257[v259[4]];
																																						end
																																					elseif (v260 <= (781 - (632 + 135))) then
																																						if (v260 <= ((8 - 3) + (9 - 3))) then
																																							if (v260 == 10) then
																																								v257[v259[2]] = v257[v259[934 - (495 + 436)]] + v259[4];
																																							else
																																								local v298 = 0;
																																								local v299;
																																								local v300;
																																								local v301;
																																								local v302;
																																								local v303;
																																								while true do
																																									if (1 == v298) then
																																										v301 = nil;
																																										v302 = nil;
																																										v298 = 2;
																																									end
																																									if (v298 == 2) then
																																										v303 = nil;
																																										while true do
																																											if (v299 == 2) then
																																												for v407 = v300, v223 do
																																													local v408 = 0;
																																													local v409;
																																													while true do
																																														if (v408 == 0) then
																																															v409 = 0;
																																															while true do
																																																if (v409 == 0) then
																																																	v303 = v303 + (1269 - (45 + 1223));
																																																	v257[v407] = v301[v303];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v299 == 0) then
																																												local v392 = 0;
																																												while true do
																																													if (v392 == 1) then
																																														v299 = 1;
																																														break;
																																													end
																																													if (v392 == 0) then
																																														v300 = v259[2];
																																														v301, v302 = v254(v257[v300](v257[v300 + 1]));
																																														v392 = 1;
																																													end
																																												end
																																											end
																																											if (1 == v299) then
																																												local v393 = 0;
																																												while true do
																																													if (v393 == 0) then
																																														v223 = (v302 + v300) - 1;
																																														v303 = 0 - (0 - 0);
																																														v393 = 1;
																																													end
																																													if (v393 == 1) then
																																														v299 = 2;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v298 == 0) then
																																										v299 = 0;
																																										v300 = nil;
																																										v298 = 1;
																																									end
																																								end
																																							end
																																						elseif (v260 <= (1486 - (1096 + 378))) then
																																							local v304 = 0;
																																							local v305;
																																							local v306;
																																							while true do
																																								if (v304 == 0) then
																																									v305 = 0;
																																									v306 = nil;
																																									v304 = 1;
																																								end
																																								if (1 == v304) then
																																									while true do
																																										if (v305 == 0) then
																																											v306 = v259[4 - 2];
																																											do
																																												return v257[v306](v21(v257, v306 + 1, v259[3]));
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v260 > 13) then
																																							local v348 = 0;
																																							local v349;
																																							local v350;
																																							local v351;
																																							while true do
																																								if (v348 == 1) then
																																									v351 = nil;
																																									while true do
																																										if (v349 == 0) then
																																											local v411 = 0;
																																											while true do
																																												if (v411 == 0) then
																																													v350 = v259[(1704 - (748 + 954)) + 0];
																																													v351 = v257[v259[1215 - (498 + 714)]];
																																													v411 = 1;
																																												end
																																												if (v411 == 1) then
																																													v349 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v349 == 1) then
																																											v257[v350 + 1 + 0 + 0 + 0] = v351;
																																											v257[v350] = v351[v259[705 - (112 + 589)]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v348 == 0) then
																																									v349 = 0;
																																									v350 = nil;
																																									v348 = 1;
																																								end
																																							end
																																						elseif (v257[v259[1 + 1]] == v259[9 - 5]) then
																																							v222 = v222 + 1;
																																						else
																																							v222 = v259[3];
																																						end
																																					elseif (v260 <= (4 + 9 + 3)) then
																																						if (v260 == 15) then
																																							v257[v259[(401 - (293 + 106)) + 0]] = v259[412 - ((2224 - (1009 + 900)) + 94)] + v257[v259[15 - 11]];
																																						else
																																							local v308 = 0;
																																							local v309;
																																							local v310;
																																							local v311;
																																							local v312;
																																							while true do
																																								if (v308 == 1) then
																																									v311 = nil;
																																									v312 = nil;
																																									v308 = 2;
																																								end
																																								if (v308 == 2) then
																																									while true do
																																										if (0 == v309) then
																																											local v395 = 0;
																																											while true do
																																												if (0 == v395) then
																																													v310 = v259[3 - 1];
																																													v311 = v257[v310 + ((3 + 1) - (1064 - (665 + 397)))];
																																													v395 = 1;
																																												end
																																												if (v395 == 1) then
																																													v309 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v309 == 2) then
																																											if (v311 > 0) then
																																												if (v312 <= v257[v310 + (105 - (53 + 1 + 50))]) then
																																													local v444 = 0;
																																													local v445;
																																													while true do
																																														if (0 == v444) then
																																															v445 = 0;
																																															while true do
																																																if (v445 == 0) then
																																																	v222 = v259[553 - (540 + 10)];
																																																	v257[v310 + 3] = v312;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																											elseif (v312 >= v257[v310 + 1 + 0 + 0]) then
																																												local v446 = 0;
																																												local v447;
																																												while true do
																																													if (v446 == 0) then
																																														v447 = 0;
																																														while true do
																																															if (0 == v447) then
																																																v222 = v259[8 - 5];
																																																v257[v310 + 3] = v312;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (1 == v309) then
																																											local v396 = 0;
																																											while true do
																																												if (v396 == 0) then
																																													v312 = v257[v310] + v311;
																																													v257[v310] = v312;
																																													v396 = 1;
																																												end
																																												if (v396 == 1) then
																																													v309 = 2;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v308 == 0) then
																																									v309 = 0;
																																									v310 = nil;
																																									v308 = 1;
																																								end
																																							end
																																						end
																																					elseif (v260 <= ((44 + 11) - 38)) then
																																						local v313 = 0;
																																						local v314;
																																						local v315;
																																						while true do
																																							if (v313 == 0) then
																																								v314 = 0;
																																								v315 = nil;
																																								v313 = 1;
																																							end
																																							if (v313 == 1) then
																																								while true do
																																									if (v314 == 0) then
																																										v315 = v259[2];
																																										v257[v315] = v257[v315](v21(v257, v315 + 1, v259[874 - (306 + 565)]));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v260 > 18) then
																																						local v352 = 0;
																																						local v353;
																																						local v354;
																																						local v355;
																																						local v356;
																																						local v357;
																																						while true do
																																							if (v352 == 1) then
																																								v355 = nil;
																																								v356 = nil;
																																								v352 = 2;
																																							end
																																							if (v352 == 2) then
																																								v357 = nil;
																																								while true do
																																									if (v353 == 0) then
																																										local v415 = 0;
																																										while true do
																																											if (v415 == 1) then
																																												v353 = 1;
																																												break;
																																											end
																																											if (v415 == 0) then
																																												v354 = v259[2];
																																												v355, v356 = v254(v257[v354](v21(v257, v354 + 1, v259[1733 - ((2012 - 754) + 472)])));
																																												v415 = 1;
																																											end
																																										end
																																									end
																																									if (v353 == 2) then
																																										for v434 = v354, v223 do
																																											local v435 = 0;
																																											local v436;
																																											while true do
																																												if (v435 == 0) then
																																													v436 = 0;
																																													while true do
																																														if (v436 == 0) then
																																															v357 = v357 + 1 + 0;
																																															v257[v434] = v355[v357];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v353 == 1) then
																																										local v416 = 0;
																																										while true do
																																											if (v416 == 0) then
																																												v223 = (v356 + v354) - (1360 - (1137 + 222));
																																												v357 = 0;
																																												v416 = 1;
																																											end
																																											if (v416 == 1) then
																																												v353 = 2;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v352 == 0) then
																																								v353 = 0;
																																								v354 = nil;
																																								v352 = 1;
																																							end
																																						end
																																					else
																																						do
																																							return;
																																						end
																																					end
																																				elseif (v260 <= (6 + 23)) then
																																					if (v260 <= 24) then
																																						if (v260 <= 21) then
																																							if (v260 > (1711 - ((2997 - (1631 + 193)) + (787 - (11 + 258))))) then
																																								local v316 = 0;
																																								local v317;
																																								local v318;
																																								while true do
																																									if (v316 == 1) then
																																										while true do
																																											if (v317 == 0) then
																																												v318 = v259[1956 - (1022 + (2793 - (493 + 1368)))];
																																												v257[v318] = v257[v318](v21(v257, v318 + (1933 - (451 + 1481)), v223));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v316 == 0) then
																																										v317 = 0;
																																										v318 = nil;
																																										v316 = 1;
																																									end
																																								end
																																							else
																																								v257[v259[1 + 1]][v257[v259[309 - (99 + 207)]]] = v259[4];
																																							end
																																						elseif (v260 <= (8 + 14)) then
																																							v257[v259[2]] = v257[v259[11 - 8]] - v259[4 + 0];
																																						elseif (v260 > 23) then
																																							v257[v259[(145 + 49) - (191 + 1)]] = v257[v259[(11 - 6) - (1 + 1)]][v257[v259[2 + (800 - (252 + 546))]]];
																																						else
																																							local v360 = 0;
																																							local v361;
																																							local v362;
																																							local v363;
																																							while true do
																																								if (1 == v360) then
																																									v363 = nil;
																																									while true do
																																										if (v361 == 0) then
																																											local v417 = 0;
																																											while true do
																																												if (0 == v417) then
																																													v362 = v259[2];
																																													v363 = v257[v259[7 - 4]];
																																													v417 = 1;
																																												end
																																												if (v417 == 1) then
																																													v361 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v361 == 1) then
																																											v257[v362 + (1 - 0)] = v363;
																																											v257[v362] = v363[v257[v259[226 - (207 + 15)]]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v360 == 0) then
																																									v361 = 0;
																																									v362 = nil;
																																									v360 = 1;
																																								end
																																							end
																																						end
																																					elseif (v260 <= 26) then
																																						if (v260 == 25) then
																																							if (v259[(3 - 1) + 0] == v257[v259[1235 - (355 + 123 + 753)]]) then
																																								v222 = v222 + ((2886 - (914 + 21)) - (566 + 523 + 861));
																																							else
																																								v222 = v259[8 - (1476 - (846 + 625))];
																																							end
																																						else
																																							local v322 = 0;
																																							local v323;
																																							local v324;
																																							while true do
																																								if (v322 == 1) then
																																									while true do
																																										if (v323 == 0) then
																																											v324 = v259[1 + 0 + (656 - (89 + 566))];
																																											v257[v324] = v257[v324]();
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v322 == 0) then
																																									v323 = 0;
																																									v324 = nil;
																																									v322 = 1;
																																								end
																																							end
																																						end
																																					elseif (v260 <= (25 + 2)) then
																																						v257[v259[148 - (37 + 109)]][v257[v259[10 - 7]]] = v257[v259[4]];
																																					elseif (v260 == ((827 - (338 + 341)) - (107 + 13))) then
																																						local v365 = 0;
																																						local v366;
																																						local v367;
																																						local v368;
																																						local v369;
																																						local v370;
																																						while true do
																																							if (v365 == 0) then
																																								v366 = 0;
																																								v367 = nil;
																																								v365 = 1;
																																							end
																																							if (v365 == 1) then
																																								v368 = nil;
																																								v369 = nil;
																																								v365 = 2;
																																							end
																																							if (v365 == 2) then
																																								v370 = nil;
																																								while true do
																																									if (v366 == 2) then
																																										for v437 = v367, v223 do
																																											local v438 = 0;
																																											local v439;
																																											while true do
																																												if (0 == v438) then
																																													v439 = 0;
																																													while true do
																																														if (v439 == 0) then
																																															v370 = v370 + ((1874 - (278 + 1595)) - 0);
																																															v257[v437] = v368[v370];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v366 == 1) then
																																										local v421 = 0;
																																										while true do
																																											if (v421 == 0) then
																																												v223 = (v369 + v367) - 1;
																																												v370 = 0 - 0;
																																												v421 = 1;
																																											end
																																											if (v421 == 1) then
																																												v366 = 2;
																																												break;
																																											end
																																										end
																																									end
																																									if (v366 == 0) then
																																										local v422 = 0;
																																										while true do
																																											if (v422 == 0) then
																																												v367 = v259[120 - (81 + 37)];
																																												v368, v369 = v254(v257[v367](v21(v257, v367 + (1535 - (824 + (992 - 282))), v223)));
																																												v422 = 1;
																																											end
																																											if (1 == v422) then
																																												v366 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						local v371 = 0;
																																						local v372;
																																						local v373;
																																						local v374;
																																						local v375;
																																						while true do
																																							if (v371 == 1) then
																																								v374 = nil;
																																								v375 = nil;
																																								v371 = 2;
																																							end
																																							if (v371 == 0) then
																																								v372 = 0;
																																								v373 = nil;
																																								v371 = 1;
																																							end
																																							if (v371 == 2) then
																																								while true do
																																									if (v372 == 1) then
																																										v375 = v257[v373 + 1 + 1];
																																										if (v375 > (892 - (359 + 533))) then
																																											if (v374 > v257[v373 + 1 + 0]) then
																																												v222 = v259[3];
																																											else
																																												v257[v373 + ((1871 - (1739 + 125)) - (293 - (119 + 170)))] = v374;
																																											end
																																										elseif (v374 < v257[v373 + 1 + 0]) then
																																											v222 = v259[3];
																																										else
																																											v257[v373 + 3] = v374;
																																										end
																																										break;
																																									end
																																									if (v372 == 0) then
																																										local v424 = 0;
																																										while true do
																																											if (v424 == 1) then
																																												v372 = 1;
																																												break;
																																											end
																																											if (v424 == 0) then
																																												v373 = v259[3 - 1];
																																												v374 = v257[v373];
																																												v424 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v260 <= 34) then
																																					if (v260 <= 31) then
																																						if (v260 > (82 - 52)) then
																																							if not v257[v259[(25 - (19 + 4)) + 0 + 0]] then
																																								v222 = v222 + (461 - (385 + 75)) + (881 - (446 + 435));
																																							else
																																								v222 = v259[3];
																																							end
																																						else
																																							local v327 = 0;
																																							local v328;
																																							local v329;
																																							while true do
																																								if (v327 == 1) then
																																									while true do
																																										if (0 == v328) then
																																											v329 = v259[(454 + 116) - (379 + (1049 - (118 + 742)))];
																																											do
																																												return v21(v257, v329, v223);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v327 == 0) then
																																									v328 = 0;
																																									v329 = nil;
																																									v327 = 1;
																																								end
																																							end
																																						end
																																					elseif (v260 <= (65 - 33)) then
																																						local v330 = 0;
																																						local v331;
																																						local v332;
																																						while true do
																																							if (v330 == 1) then
																																								while true do
																																									if (v331 == 0) then
																																										v332 = v259[3 - 1];
																																										v257[v332](v21(v257, v332 + 1, v259[3 + 0]));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v330 == 0) then
																																								v331 = 0;
																																								v332 = nil;
																																								v330 = 1;
																																							end
																																						end
																																					elseif (v260 == 33) then
																																						v257[v259[1423 - (930 + 491)]] = v115[v259[3]];
																																					else
																																						v257[v259[2]] = {};
																																					end
																																				elseif (v260 <= 37) then
																																					if (v260 <= 35) then
																																						v257[v259[3 - 1]] = v257[v259[788 - (172 + 613)]] % v259[1 + 3];
																																					elseif (v260 == (19 + 8 + 9)) then
																																						v257[v259[2]] = v257[v259[3]];
																																					else
																																						v257[v259[2]] = v114[v259[3]];
																																					end
																																				elseif (v260 <= (579 - (474 + (128 - 61)))) then
																																					local v334 = 0;
																																					local v335;
																																					local v336;
																																					while true do
																																						if (v334 == 0) then
																																							v335 = 0;
																																							v336 = nil;
																																							v334 = 1;
																																						end
																																						if (v334 == 1) then
																																							while true do
																																								if (0 == v335) then
																																									v336 = v259[3 - 1];
																																									v257[v336](v21(v257, v336 + (137 - (56 + 80)), v223));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v260 == (89 - 50)) then
																																					v222 = v259[1654 - (473 + 1178)];
																																				else
																																					local v385 = 0;
																																					local v386;
																																					local v387;
																																					local v388;
																																					local v389;
																																					while true do
																																						if (1 == v385) then
																																							v388 = nil;
																																							v389 = nil;
																																							v385 = 2;
																																						end
																																						if (v385 == 2) then
																																							while true do
																																								if (v386 == 2) then
																																									for v440 = 46 - (27 + 18), v259[372 - (115 + 253)] do
																																										local v441 = 0;
																																										local v442;
																																										local v443;
																																										while true do
																																											if (v441 == 1) then
																																												while true do
																																													if (v442 == 0) then
																																														local v476 = 0;
																																														while true do
																																															if (v476 == 1) then
																																																v442 = 1;
																																																break;
																																															end
																																															if (v476 == 0) then
																																																v222 = v222 + (588 - (158 + 429));
																																																v443 = v251[v222];
																																																v476 = 1;
																																															end
																																														end
																																													end
																																													if (v442 == 1) then
																																														if (v443[1 + 0] == 36) then
																																															v389[v440 - ((156 + 9) - ((1825 - (1565 + 169)) + (1382 - (237 + 1072))))] = {v257,v443[409 - (51 + 355)]};
																																														else
																																															v389[v440 - 1] = {v114,v443[8 - 5]};
																																														end
																																														v256[#v256 + ((1427 - (245 + 122)) - (568 + 491))] = v389;
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																											if (v441 == 0) then
																																												v442 = 0;
																																												v443 = nil;
																																												v441 = 1;
																																											end
																																										end
																																									end
																																									v257[v259[(1865 - (1803 + 56)) - (9 - 5)]] = v58(v387, v388, v115);
																																									break;
																																								end
																																								if (v386 == 0) then
																																									local v426 = 0;
																																									while true do
																																										if (v426 == 1) then
																																											v386 = 1;
																																											break;
																																										end
																																										if (v426 == 0) then
																																											v387 = v252[v259[(1557 - (102 + 1453)) + (2 - 1)]];
																																											v388 = nil;
																																											v426 = 1;
																																										end
																																									end
																																								end
																																								if (v386 == 1) then
																																									local v427 = 0;
																																									while true do
																																										if (v427 == 1) then
																																											v386 = 2;
																																											break;
																																										end
																																										if (v427 == 0) then
																																											v389 = {};
																																											v388 = v18({}, {[v7("\106\43\43\2\81\17\58", "\53\116\66\108")]=function(v457, v458)
																																												local v464 = 0;
																																												local v465;
																																												local v466;
																																												while true do
																																													if (v464 == 1) then
																																														while true do
																																															if (v465 == 0) then
																																																local v485 = 0;
																																																while true do
																																																	if (v485 == 0) then
																																																		v466 = v389[v458];
																																																		return v466[(1986 - (1074 + 911)) + 0][v466[4 - 2]];
																																																	end
																																																end
																																															end
																																														end
																																														break;
																																													end
																																													if (v464 == 0) then
																																														v465 = 0;
																																														v466 = nil;
																																														v464 = 1;
																																													end
																																												end
																																											end,[v7("\149\236\31\114\189\218\31\115\175\203", "\202\179\113\23")]=function(v457, v458, v459)
																																												local v467 = 0;
																																												local v468;
																																												local v469;
																																												while true do
																																													if (v467 == 0) then
																																														v468 = 0;
																																														v469 = nil;
																																														v467 = 1;
																																													end
																																													if (v467 == 1) then
																																														while true do
																																															if (v468 == 0) then
																																																v469 = v389[v458];
																																																v469[(349 - (182 + 166)) + (0 - 0)][v469[662 - (58 + 63 + 539)]] = v459;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end});
																																											v427 = 1;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (v385 == 0) then
																																							v386 = 0;
																																							v387 = nil;
																																							v385 = 1;
																																						end
																																					end
																																				end
																																				v222 = v222 + 1 + 0;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v250 == 1) then
																															v255 = {};
																															v256 = {};
																															v257 = {};
																															for v267 = 760 - (175 + 585), v225 do
																																if (v267 >= v253) then
																																	v255[v267 - v253] = v224[v267 + (235 - (194 + 40))];
																																else
																																	v257[v267] = v224[v267 + 1];
																																end
																															end
																															v250 = 2;
																														end
																														if (v250 == 0) then
																															v251 = v158;
																															v252 = v159;
																															v253 = v160;
																															v254 = v56;
																															v250 = 1;
																														end
																													end
																												end;
																												v236 = 1;
																											end
																										end
																									end
																									if (v221 == 1) then
																										local v237 = 0;
																										while true do
																											if (v237 == 0) then
																												v224 = {...};
																												v225 = v20("#", ...) - (1 + 0 + (1936 - (1732 + 204)));
																												v237 = 1;
																											end
																											if (v237 == 1) then
																												v221 = 2;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v220 == 1) then
																								v223 = nil;
																								v224 = nil;
																								v220 = 2;
																							end
																							if (v220 == 2) then
																								v225 = nil;
																								v226 = nil;
																								v220 = 3;
																							end
																							if (v220 == 0) then
																								v221 = 0;
																								v222 = nil;
																								v220 = 1;
																							end
																						end
																					end;
																				end
																			end
																		end
																		if (v157 == 0) then
																			local v197 = 0;
																			while true do
																				if (v197 == 0) then
																					v158 = v113[(1524 - (391 + 451)) - (465 + (997 - (409 + 372)))];
																					v159 = v113[(1 - 0) + 1 + 0];
																					v197 = 1;
																				end
																				if (v197 == 1) then
																					v157 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v156 == 0) then
															v157 = 0;
															v158 = nil;
															v156 = 1;
														end
														if (v156 == 1) then
															v159 = nil;
															v160 = nil;
															v156 = 2;
														end
													end
												end;
												return v58(v57(), {}, v42)(...);
											end
										end
									end
									v60 = 3;
								end
							end
						end
						break;
					end
					if (v45 == 0) then
						v46 = 0;
						v47 = nil;
						v48 = nil;
						v49 = nil;
						v45 = 1;
					end
					if (v45 == 1) then
						v50 = nil;
						v51 = nil;
						v52 = nil;
						v53 = nil;
						v45 = 2;
					end
				end
			end;
			vv17(), ...);
			break;
		end
	end
end
